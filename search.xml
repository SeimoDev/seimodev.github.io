<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>新博客纪念</title>
    <url>/2023/06/29/Hello-World/</url>
    <content><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World !!!"></a>Hello World !!!</h2><p>这是本博客的第一篇文章，未来写的文章都会在这里发布哦！</p>
]]></content>
      <categories>
        <category>吹水</category>
      </categories>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
  <entry>
    <title>【教程】阿里云弹性计算Clouder认证：ECS快速入门</title>
    <url>/2023/11/09/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91%E9%98%BF%E9%87%8C%E4%BA%91%E5%BC%B9%E6%80%A7%E8%AE%A1%E7%AE%97Clouder%E8%AE%A4%E8%AF%81%EF%BC%9AECS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<blockquote>
<p>2024年8月4日更新：图床跑路，所有图片均丢失</p>
</blockquote>
<h2 id="1-注册阿里云"><a href="#1-注册阿里云" class="headerlink" title="1.注册阿里云"></a>1.注册阿里云</h2><p>电脑打开<a href="https://aliyun.com/">aliyun.com</a>官网，点击右上角登录&#x2F;注册</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgsoU.png" alt="lgsoU.png"></p>
<p>使用支付宝扫码注册，在手机上按提示操作，并进行个人实名认证。</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgxY0.png" alt="lgxY0.png"></p>
<p>然后返回主页。</p>
<h2 id="2-进行学生认证"><a href="#2-进行学生认证" class="headerlink" title="2. 进行学生认证"></a>2. 进行学生认证</h2><p>打开<a href="https://university.aliyun.com/">阿里云高校认证</a>页面，点击【立即领取】</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgb2C.png" alt="lgb2C.png"></p>
<p>之后会弹出学生认证，使用手机支付宝扫码进行学生认证，认证时选择【学籍认证】，学信网验证码获取流程如下：</p>
<h4 id="1-打开-学信网"><a href="#1-打开-学信网" class="headerlink" title="1. 打开 学信网"></a>1. 打开 <a href="https://www.chsi.com.cn/">学信网</a></h4><h4 id="2-点击【学籍查询】"><a href="#2-点击【学籍查询】" class="headerlink" title="2. 点击【学籍查询】"></a>2. 点击【学籍查询】</h4><p><img src="https://i0.imgs.ovh/2023/11/09/lgoIt.png" alt="lgoIt.png"></p>
<h4 id="3-登录后点击【在线验证报告】-【申请】"><a href="#3-登录后点击【在线验证报告】-【申请】" class="headerlink" title="3. 登录后点击【在线验证报告】-【申请】"></a>3. 登录后点击【在线验证报告】-【申请】</h4><p><img src="https://i0.imgs.ovh/2023/11/09/lgSzm.png" alt="lgSzm.png"></p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lguyN.jpeg" alt="lguyN.jpeg"></p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgOmR.png" alt="lgOmR.png"></p>
<h4 id="4-获取验证码"><a href="#4-获取验证码" class="headerlink" title="4. 获取验证码"></a>4. 获取验证码</h4><p><img src="https://i0.imgs.ovh/2023/11/09/lgQcp.png" alt="lgQcp.png"></p>
<h2 id="3-领取优惠券"><a href="#3-领取优惠券" class="headerlink" title="3.领取优惠券"></a>3.领取优惠券</h2><p>再次打开<a href="https://university.aliyun.com/">阿里云高校认证</a>页面，点击【立即领取】</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgb2C.png" alt="lgb2C.png"></p>
<p>领取成功即可。</p>
<h2 id="5-报名课程"><a href="#5-报名课程" class="headerlink" title="5. 报名课程"></a>5. 报名课程</h2><p>进入<a href="https://edu.aliyun.com/certification/cldc17?spm=a2c6h.26504196.f4788ca263094fb1a2ee2d1c8565bd32.8.54c33ab1QqkOEW">报名页面</a>，点击【立即购买】</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgJ2K.png" alt="lgJ2K.png"><br>选择【弹性计算】-【ECS快速入门】课程，点击【立即购买】</p>
<h2 id="6-进入课程"><a href="#6-进入课程" class="headerlink" title="6. 进入课程"></a>6. 进入课程</h2><p>点击前往【我的认证】<br><img src="https://i0.imgs.ovh/2023/11/09/lgUzj.png" alt="lgUzj.png"></p>
<p>点击【进入考试】</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgjCI.png" alt="lgjCI.png"></p>
<h2 id="7-考试"><a href="#7-考试" class="headerlink" title="7. 考试"></a>7. 考试</h2><p>根据屏幕左侧【实验手册】提示操作即可<br><img src="https://i0.imgs.ovh/2023/11/09/lg5cJ.png" alt="lg5cJ.png"></p>
<h2 id="8-领取证书"><a href="#8-领取证书" class="headerlink" title="8.领取证书"></a>8.领取证书</h2><p>完成考试并且合格后，返回【我的认证】页面，等待10s左右刷新即可领取证书</p>
<p><img src="https://i0.imgs.ovh/2023/11/09/lgv6o.png" alt="lgv6o.png"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Kindle老矣，尚能饭否？</title>
    <url>/2024/08/06/Kindle%E8%80%81%E7%9F%A3%EF%BC%8C%E5%B0%9A%E8%83%BD%E9%A5%AD%E5%90%A6%EF%BC%9F/</url>
    <content><![CDATA[<p>前几天，我的朋友送了我一台Kindle7，我很好奇这台来自十年前的电子阅读器还能带来什么花样，于是就有了这篇文章。</p>
<h2 id="设备情况"><a href="#设备情况" class="headerlink" title="设备情况"></a>设备情况</h2><p>这台机器发布于2014年9月18日，售价 499 元，而我手上这台白色版本上架于2015年3月31日，同时这也是第一款在中国和日本市场销售的普通 Kindle，详细配置可见下表：</p>
<table>
<thead>
<tr>
<th>项目</th>
<th>参数</th>
</tr>
</thead>
<tbody><tr>
<td>发布日期</td>
<td>2014年9月18日</td>
</tr>
<tr>
<td>屏幕大小</td>
<td>6英寸</td>
</tr>
<tr>
<td>分辨率</td>
<td>600 * 800</td>
</tr>
<tr>
<td>PPI</td>
<td>167ppi</td>
</tr>
<tr>
<td>灰阶</td>
<td>16级</td>
</tr>
<tr>
<td>内存</td>
<td>256MB</td>
</tr>
<tr>
<td>存储</td>
<td>4GB</td>
</tr>
<tr>
<td>重量</td>
<td>191g</td>
</tr>
<tr>
<td>机身厚度</td>
<td>10.2mm</td>
</tr>
<tr>
<td>背光</td>
<td>无</td>
</tr>
<tr>
<td>WIFI</td>
<td>有</td>
</tr>
<tr>
<td>CPU</td>
<td><code>Freescale i.MX 6SoloLite Cortex-A9 @1GHz</code></td>
</tr>
<tr>
<td>扬声器</td>
<td>无</td>
</tr>
<tr>
<td>外部接口</td>
<td>Micro-USB(USB2.0速率)</td>
</tr>
<tr>
<td>输入控制</td>
<td>红外线触控屏</td>
</tr>
<tr>
<td>电池容量</td>
<td>890mAh</td>
</tr>
<tr>
<td>充电功率</td>
<td>2.625w(5.25V*500mA)</td>
</tr>
<tr>
<td>售价</td>
<td>499RMB</td>
</tr>
</tbody></table>
<h2 id="外观手感"><a href="#外观手感" class="headerlink" title="外观手感"></a>外观手感</h2><p>虽然已经历经多年风雨沧桑，但是由于采用了<del>三星旗舰同款高端</del>塑料外壳，经过简单的酒精擦拭处理，外壳依然洁白无暇。<br><img src="https://cdn.seimo.cn/1723001343896.jpg"></p>
<p>在握持手感上，也是刚好单手可握的水平，191g的重量无论是在使用时拿捏一角还是携带时整个握持，都不会有撑受压手的感觉。<br><img src="https://cdn.seimo.cn/1723001343881.jpg"><br><img src="https://cdn.seimo.cn/1723001343839.jpg"></p>
<p>翻过背面，下方是产品信息与参数，中间是镜面镂空的 <code>Amazon</code> Logo，非常符合那个年代电子产品的设计。背面四周采用与 <code>小米13Ultra</code> Deco同款的阶梯设计，握持起来更加平滑，不会出现阁手的感觉。<br><img src="https://cdn.seimo.cn/IMG_20240807_145511.jpg"></p>
<p>底部设计非常简洁，电源按键作为整机唯一一个物理按键与Micro-USB接口对称排布，中间是橙绿双色指示灯，除此之外在其它位置没有任何开孔<del>可以在地铁上放心使用()</del>。<br><img src="https://cdn.seimo.cn/1723001343852.jpg"></p>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p>这款机型最后一次系统更新的版本号为<code>5.12.2.2</code>，我当前使用的系统版本号为<code>5.11.1.1</code>，下文也全部基于此版本进行，不同版本间可能存在差异，请以具体版本为准。<br><img src="https://cdn.seimo.cn/20240807153901.png"></p>
<p>由于Kindle中国电子书点已于2023年6月30日关闭，所以强烈建议各位使用外区账号，目前测试无需对网络进行特殊处理即可轻松连接。<br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723016964520.png"><br>原版的Kindle系统其实并没有太多令人惊讶的地方，不过也正常，你也不能奢望拿一台墨水屏的电子阅读器看视频，可能唯一有可玩性的点，在这个“体验版网页浏览器”，时至今日，由于https协议以及证书更新的问题，它也只能打开部分网站，当我在这块600 * 800分辨率的屏幕上看到熟悉的网站时，我又回想起刚刚接触网络的那段日子，那是我家用的还是Windows98，用的是大屁股的CRT显示器。<br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723017197490.jpg"><br>作为一台阅读器，Kindle做的真的完美吗？我想说是，但也不是。在整个阅读逻辑上，Kindle做到了充分利用墨水屏的特点来设计交互，让你几乎感受不到它的延迟与卡顿。但是，或许是国际大厂的一贯作风，Kindle的系统也很保守，支持的格式非常有限，感知最明显的一点是不支持<code>EPUB</code>格式，这算是这段时间用下来最让我糟心的一点，但是没有办法，要么越狱，要么手动转格式。<br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723017718613.jpg"></p>
<p>不过，Kindle操作系统的交互逻辑我是真的很喜欢，几乎所有操作都是由点击完成的，相比滑动操作，点击操作在墨水屏上具有先天优势，同时点击对角位置截屏也是非常棒的设计。</p>
<h2 id="越狱"><a href="#越狱" class="headerlink" title="越狱"></a>越狱</h2><p>既然原生系统有那么多缺点，那我只能就这么忍着吗？那当然不是了，我们还有大宝贝杀手锏没有用，那就是–越狱。</p>
<p>关于越狱的过程，我并不准备在这里写一份完整的教程，书伴上已经有很详细的内容了，重复造轮子没有任何意义，我在这里留一个传送门：<a href="https://bookfere.com/post/406.html">Kindle 越狱支持一览：检查 Kindle 设备能否越狱</a>，上面有非常详细的各个型号Kindle的越狱教程。</p>
<p>现在越狱完成之后，我们能做的事情就很多了，比如我们现在可以更换锁屏壁纸了，借助<code>ScreenSavers</code>插件，我们可以轻松地将自己喜欢的图片设置为锁屏壁纸。<br><img src="https://cdn.seimo.cn/IMG_20240808_095146.jpg" alt="疯狂明示"></p>
<p>另外，你是否还记得上文提到的Kindle不支持 <code>EPUB</code> 格式吗，在越狱后我们可以使用 <code>KOReader</code> 插件打开 <code>EPUB</code> 格式的文档，另外 <code>KOReader</code> 作为 一款全能的第三方电子书阅读器插件，其优点不止于此。</p>
<p><code>KOReader</code> 可以采用图像分割再重排的方式处理 PDF 文档（包括扫描和非扫描页面），这样不仅支持文字版PDF重排和数学公式的重排，还能对扫描版 PDF 和 DJVU 文档进行重新排版。重新排版后的文档，文字放大后可以适应屏幕自动换行，免去不断地左右拖动页面阅读。此外，KOReader 还有调整页面对比度、对文字加黑处理、自动切除页面白边、去除页面水印等实用功能。<br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723084408965.jpg"><br>上图为 <code>《线性代数(第六版)》</code> 扫描版，左边为 <code>KOReader</code> 重新分割增强后的排版与显示效果，右侧为Kindle默认阅读器显示效果。</p>
<p>在越狱之后，我们还可以安装 <code>File Browser</code> 这款插件，可以实现对Kindle文件的无线管理，不需要使用数据线与电脑连接也可以导入&#x2F;导出文件，非常方便。</p>
<p>上面提到的这些插件，在<a href="https://bookfere.com/">书伴</a>均有提供安装使用教程和官方下载链接，有需要的可以自行取用。</p>
<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><div class="admonition warning"><p class="admonition-title">Warning</p><p>下述操作可能会使您的设备丢失全部数据甚至永远无法使用，请确保有足够的能力解决可能出现的任何问题后继续阅读，否则请立即关闭页面并退出！</p>
</div>

<p>以上越狱之类的还只是开胃小菜，下面才是重量级的拿手好戏，没错，这台Kindle7是可以被刷成Android系统的，而且不止可以刷机，还可以在保留原版系统的情况下与Android构成双系统，尽管是<code>Android 4.4.2</code> 但是256MB内存你还要什么自行车呢。</p>
<p>由于年代久远，很多机型的Android资料已经很难寻找，博主通过闲鱼购买到了部分机型的刷机资料，大家可以自取。</p>
<p><a href="https://www.123pan.com/s/T1LcVv-Douwd.html">Kindle越狱与刷机资料</a></p>
<p><img src="https://cdn.seimo.cn/20240808143935.png"></p>
<p>下载完成之后根据程序提示操作即可，这里贴一份可能会用到的教程：<a href="https://zyyme.com/usr/uploads/2024/01/hlwm1e0cgx.pdf">Kindle安卓系统刷机指南</a> 。</p>
<p>尽管配置上捉襟见肘，但是墨水屏的特性让体验好了不少，并不会有感知上的卡顿。但是想要在Android4.4.2上有较好的体验，还是要费一般功夫的，这里找到了酷安大佬 <a href="http://www.coolapk.com/u/3935388">@zzy_ac</a> 整理的 <a href="https://www.coolapk.com/feed/30410723?shareKey=YzE2YzE1OGMwZmQwNjZiNGIwMWI~&shareUid=21385043&shareFrom=com.coolapk.market_14.3.0">适用于Android4.4.2的Elink APPs</a> ，微信读书的体验还是很棒的。</p>
<p><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723117857900.jpg"><br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723117883526.jpg"><br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723117892068.jpg"></p>
<p>值得一提的是，这个Android固件已经内置了SuperSU，也就是说它是有ROOT权限的，理论上你可以在上面安装原版的 <code>Xposed 2.6</code> ，然后使用例如 <code>GravityBox</code> 等经典工具对系统进行修改。<br><img src="https://cdn.seimo.cn/pintu-fulicat.com-1723124825604.jpg"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Kindle 作为一款电子阅读器本身并没有什么好说的，这篇文章也只是这几天对这台机器折腾内容的一个总结，各种材料网路上已经非常详细，也没必要再大费周章地去重复，大家看个乐就好。</p>
<p>总的来说，对于我自己还是比较满意这台机器的，作为一台电子阅读器，他做好了它本就该做好的工作，同时也有相当的拓展乐趣，或许多看没有适配这个型号才是它唯一的缺憾吧…</p>
<h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><blockquote>
<p>书伴<br>维基百科<br>亚马逊中国</p>
</blockquote>
]]></content>
      <categories>
        <category>评测</category>
      </categories>
      <tags>
        <tag>评测</tag>
        <tag>Kindle</tag>
      </tags>
  </entry>
  <entry>
    <title>【汉化】Windows/Office数字激活工具</title>
    <url>/2023/10/05/%E3%80%90%E6%B1%89%E5%8C%96%E3%80%91Windows-Office%E6%95%B0%E5%AD%97%E6%BF%80%E6%B4%BB%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<blockquote>
<p>2024年8月4日更新：图床跑路，所有图片均丢失</p>
</blockquote>
<p><a href="https://github.com/massgravel/Microsoft-Activation-Scripts">原版链接</a></p>
<blockquote>
<p>此工具仅用于学习交流，请勿用于商业用途。<br><img src="https://i.imgs.ovh/2023/10/05/LAi0I.png" alt="LAi0I.png"><br>已获得原作者<a href="https://github.com/massgravel/Microsoft-Activation-Scripts/issues/275">授权</a>进行汉化</p>
</blockquote>
<h3 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h3><p><a href="https://imgloc.com/image/LA4aJ"><img src="https://i.imgs.ovh/2023/10/05/LA4aJ.png" alt="LA4aJ.png"></a><br><img src="https://i.imgs.ovh/2023/10/05/LAY3W.png" alt="LAY3W.png"><br><img src="https://i.imgs.ovh/2023/10/05/LAdOv.png" alt="LAdOv.png"><br><a href="https://imgloc.com/image/LA8Ee"><img src="https://i.imgs.ovh/2023/10/05/LA8Ee.png" alt="LA8Ee.png"></a></p>
<h3 id="汉化版本下载链接"><a href="#汉化版本下载链接" class="headerlink" title="汉化版本下载链接"></a>汉化版本下载链接</h3><p><a href="https://github.com/SeimoDev/Microsoft-Activation-Scripts_Chinese/tree/master">Github</a></p>
<p><a href="https://www.123pan.com/s/T1LcVv-nfrwd.html">123网盘</a>   <code>   提取码:ETnt</code></p>
]]></content>
      <categories>
        <category>汉化</category>
      </categories>
      <tags>
        <tag>汉化</tag>
        <tag>Office</tag>
        <tag>Windows</tag>
        <tag>HWID2</tag>
      </tags>
  </entry>
  <entry>
    <title>使用机场作为跳板自建高速节点</title>
    <url>/2025/08/04/%E4%BD%BF%E7%94%A8%E6%9C%BA%E5%9C%BA%E4%BD%9C%E4%B8%BA%E8%B7%B3%E6%9D%BF%E8%87%AA%E5%BB%BA%E9%AB%98%E9%80%9F%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<h2 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h2><p>最近看你们都在用 <code>Claude Code</code>，心里那叫一个馋啊。但是有可能是我平时用的机场的原因，导致我 Claude 账号几乎每次注册都是秒封的状态。刚好前几天看到 <a href="https://www.landiannews.com/">@蓝点网</a> 分享了很便宜的海外大宽带 VPS，一年只要 11 刀，于是果断下单打算自建节点。</p>
<h2 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h2><p>搭建节点其实非常简单，VPS 配置好以后网上找个<strong>开源</strong>脚本运行一下无脑装就行了，但是装好之后，我发现一个非常严重的问题，这 tm 速度怎么那么慢啊！！！</p>
<p><img src="https://cdn.seimo.cn/20250804231723.png"></p>
<p>经过测速发现，服务器端的速度是非常快的</p>
<p><img src="https://cdn.seimo.cn/20250804232146.png"></p>
<p>那说明问题出在用户到服务器这段路程上了。</p>
<h2 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h2><p>首先，我尝试切换到 BBR 防阻塞内核算法，但是提升不大，我又尝试切换了多种代理协议，也差别不大。这时我意识到，有可能是 VPS 与国内 ISP 的连接线路的问题，结果 Best Trace 一看，好家伙还真是饶了一大圈，那这种质量的线路速度垃圾点也情有可原了，毕竟这个价格要什么自行车嘛。</p>
<p><img src="https://cdn.seimo.cn/QQ_1754321428274.png"></p>
<h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>好，分析出来问题了，我们要解决问题。在机场业内，解决垃圾线路速度慢的问题其实很简单，上中转机就行了。但是，我们自建节点肯定不像机长们那么豪横，毕竟大宽带的优质线路机器成本高到离谱。那我就在想，有没有什么办法既便宜又能解决问题呢？</p>
<p>欸嘿，那肯定有了。既然我们只是为了获取一个纯净的落地 ip，又恰好我的机场还有很长时间到期，那干脆拿机场做中转不就好了？反正不拿这个节点打游戏，延迟什么的也无所谓。在与 Gemini 交流了我的想法后，Gemini 告诉我我的办法完全可行，只需简单修改订阅配置文件就可以做到！</p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>我们这里从头开始讲一下完整的操作步骤。</p>
<ol>
<li>先有一个机场，如果你还没有，欢迎使用我<a href="https://www.tntv2.online/auth/register?code=bcXC">同款机场</a></li>
<li>买一台 VPS，同理，如果你还没有，欢迎使用我<a href="https://my.racknerd.com/aff.php?aff=15272">同款 VPS</a></li>
<li>ssh 连接你购买的 VPS (如果不会请自行 Google 或询问大语言模型)</li>
<li>找一个你喜欢的代理协议并安装，我选择的是 Vmess, 你也可以选择别的，一般都可以根据相关文档安装服务端，或者在 Github 上寻找一键安装脚本</li>
<li>获取你机场的订阅文件，把你的 clash 订阅链接放到浏览器打开，保存为一个 <code>yaml</code> 文件</li>
<li>编辑上一步保存的 <code>yaml</code>文件，在里面添加你的节点信息。将你的自建节点信息添加到 <code>proxies</code> 组，然后创建一个类型为 <code>relay</code> 的 <code>proxy-groups</code>，在里面先后添加你的机场节点和自建节点，这样就可以实现通过机场节点中转流量到你的自建节点，从而提高速度。以下是一个示例配置：<figure class="highlight yaml"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line"><span class="attr">proxies:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;HK-Node&quot;</span> <span class="comment">#机场节点</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">ss</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">hk.server.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">aes-256-gcm</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">&quot;your_password&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;JP-Node&quot;</span> <span class="comment">#自建节点</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">vmess</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">jp.server.com</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line">    <span class="attr">uuid:</span> <span class="string">&quot;your_uuid&quot;</span></span><br><span class="line">    <span class="attr">alterId:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">cipher:</span> <span class="string">auto</span></span><br><span class="line"><span class="attr">proxy-groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;全球精选&quot;</span> <span class="comment"># 您可能已有的主选择策略组</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">select</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;HK-Relay-JP&quot;</span> <span class="comment"># 将我们的双跳策略组加入其中</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;HK-Node&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;JP-Node&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;DIRECT&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;HK-Relay-JP&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">relay</span></span><br><span class="line">    <span class="attr">proxies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;HK-Node&quot;</span>   <span class="comment"># 入口节点，这里需要你从机场节点中选一个你觉得最好用的过来</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;JP-Node&quot;</span>   <span class="comment"># 出口（落地）节点</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>以上，你成功解决了自建节点回国速度慢的问题。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
        <tag>梯子</tag>
        <tag>技术交流</tag>
      </tags>
  </entry>
  <entry>
    <title>Seimo和ta的2024</title>
    <url>/2025/01/10/Seimo%E5%92%8Cta%E7%9A%842024/</url>
    <content><![CDATA[<p>终于，期末周总算熬过去了，我终于能静下心来写写2024年的年度流水账了。</p>
<p>一转眼，我的人生已经过去了四分之一，悠悠20年啊。不得不说，2024年绝对是我人生中目前为止最棒的一年！</p>
<h3 id="年初：小梦想，大满足"><a href="#年初：小梦想，大满足" class="headerlink" title="年初：小梦想，大满足"></a>年初：小梦想，大满足</h3><p>年初的时候，我终于拿到了梦寐以求的呼号——<code>BI6PCR</code>。这个名字以后会长期甚至永久地陪伴着我，也意味着我终于可以光明正大、合法地玩业余无线电了！更让我兴奋的是，今年我还第一次尝试接收国际空间站的信号。虽然效果没那么完美，但在朋友的帮助下，接收到信号的那一刻还是觉得超级酷！</p>
<p><img src="https://cdn.seimo.cn/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_2025-01-10_003955_580.png"></p>
<h3 id="四五月：意外的转折点"><a href="#四五月：意外的转折点" class="headerlink" title="四五月：意外的转折点"></a>四五月：意外的转折点</h3><p>四五月份，我在<code>X</code>上随手刷到一篇推文，随手填了个报名表，结果！谁能想到呢，这次随手操作成了我人生中的巨大转折点。</p>
<p><img src="https://cdn.seimo.cn/20250110005652.png"></p>
<p>如果你平时有关注我的社媒，估计已经猜到了——我成功拿到了<code>AdventureX 2024</code>的邀请函！这是我人生中第一次参加黑客松，也是一次彻底点燃希望的旅程。可以说，这次经历带给我的震撼，无论在人脉、技术还是眼界上，都是前所未有的！</p>
<blockquote>
<p>“小时候谁没做过梦呢？可谁又真的有勇气去实现自己的梦呢？”</p>
</blockquote>
<p>在<code>AdventureX</code>，让我感动的不仅是那些超厉害的参赛者，还有主办方。你能想象吗？一群高中生居然能调动这么多资源，把活动办得这么专业！这种事放在我和我身边的同学身上，简直是想都不敢想的事情。我们天天被关在高考的象牙塔里，哪有什么机会追梦。</p>
<blockquote>
<p>“我们把人生五分之一的时间花在学一些完全用不到的东西上，这到底是为了什么？”</p>
</blockquote>
<h3 id="十月：疯狂的香港之行"><a href="#十月：疯狂的香港之行" class="headerlink" title="十月：疯狂的香港之行"></a>十月：疯狂的香港之行</h3><p>十月份，我一个人踏上了去香港的旅程。为了省钱，我硬是坐了将近20个小时的火车硬座到深圳，见了<code>@白毛</code>。虽然在香港只待了一天，但我还是完成了<code>HSBC</code>、<code>BOCHK</code>、<code>ZABank</code>的开户，还顺手拿下了心心念念的<code>AIME</code>卡。更别提打卡了<code>ICAC</code>总部和香港立法会，这些地方以前可是只能在梦里想想！</p>
<p>返程时，我在深圳的“海岸时代大厦”楼下随手拍了张照片，算是给这趟旅程画上句号。当然，回家的路上又是20小时绿皮车硬座，真的是酸爽到不行……🤣</p>
<p><img src="https://cdn.seimo.cn/IMG_20250110_020019.jpg"></p>
<h3 id="十一月：忙到飞起"><a href="#十一月：忙到飞起" class="headerlink" title="十一月：忙到飞起"></a>十一月：忙到飞起</h3><p>十一月几乎每个周末都在跑活动。先是去参加了<code>Google Developer Group Zhengzhou</code>的社区<code>DevCon</code>，然后又赶去武汉参加了一场三小时极限黑客松。为了让更多人感受到这种氛围，我还带了一些学弟学妹，希望能帮他们打开新世界的大门。</p>
<p>这一年，我开始尝试独立做前后端开发。前端从“HTML原始人”慢慢进化到学会用<code>Vue</code>；后端则从死守原生的顽固派转型为<code>Docker</code>的忠实粉丝。说实话，一开始觉得<code>Docker</code>复杂得要死，简直是“脱裤子放屁”。可用了之后才发现…嗯，真香！</p>
<h3 id="面基与成长"><a href="#面基与成长" class="headerlink" title="面基与成长"></a>面基与成长</h3><p>2024年还是我面基网友最多的一年！五一的时候在武汉见了“世界三傻”，在<code>AdventureX</code>则遇到了一群推上的大佬。尤其要感谢<code>烟波</code>和<code>Steven Lynn</code>，他们在我陷入无限自我怀疑的时候，给了我特别肯定的反馈，帮我走出情绪低谷。</p>
<h3 id="产品与思考"><a href="#产品与思考" class="headerlink" title="产品与思考"></a>产品与思考</h3><p>这一年，我花了不少时间琢磨产品设计。不得不说，很多独立开发者都活在自己的信息茧房里。技术的目的应该是服务人群啊！如果只是根据自己的兴趣做点东西，那充其量也就算是兴趣爱好，只有深入分析市场需求，才能做出真正有用的产品。</p>
<p>比如，大多数非计算机行业的人根本不知道AI会伪造事实。就像最近大家在<code>X</code>上调侃的“不会写代码，全靠AI开发应用收入百万”这种事，其实挺扯的。这就像给中世纪士兵配备现代最先进的武器，他压根用不明白，因为他完全不懂基础原理。所以我们看起来简单得像喝水的事情，对别人可能就是黑魔法。</p>
<p>虽然吐槽了这么多，其实我还是做了一些有趣的小玩具，虽然它们只是“小玩具”，没什么商用价值啦（尴尬笑）。</p>
<p><img src="https://cdn.seimo.cn/20250110015624.png"><br><img src="https://cdn.seimo.cn/20250110015647.png"></p>
<h3 id="年末：意想不到的惊喜"><a href="#年末：意想不到的惊喜" class="headerlink" title="年末：意想不到的惊喜"></a>年末：意想不到的惊喜</h3><p>年末给了我不少惊喜。最值得一提的就是，我成功被<code>Spark Lab S2</code>录取了！超级期待明年二月份和大家见面，一起折腾出更多有趣的事情！</p>
<p><img src="https://cdn.seimo.cn/image%20(1).png"></p>
<h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h3><p>最后，我想列举一下我能记起的长久以来在互联网上帮助过我的人，提及一下他们在我心中的ID，以示尊重：<br>(排名不分前后，仅限于首次相识在线上且不是日常在一起的朋友。如有遗漏欢迎随时cue我)</p>
<blockquote>
<p><code>Cute997</code> <code>光年</code> <code>长歌</code> <code>过去</code> <code>孙程朗</code> <code>山形まり花</code> <code>平安果主题</code> <code>帽子jun</code> <code>救禅</code> <code>暗梦幻夕</code> <code>星光世界</code> <code>TGP不是启动器</code> <code>VAPESMAN</code> <code>世界三傻</code> <code>喵喵小饭团</code> <span style="border: 2px solid black; padding: 1px;"><code>海岸幻想兔酱</code></span> <code>星空未来</code> <code>杯子下面有块糖</code> <code>泽渡雫</code> <code>杏铃</code> <code>橙橙今天吃什么</code> <code>子龙zj</code> <code>xzr</code> <code>麻豆主题</code> <code>岁纳京子</code> <code>注销酱</code> <code>小家伙su</code> <code>马丁龙猪</code> <code>秋叶随风</code> <code>酱紫</code> <code>JLJDZZY</code> <code>白毛</code> <code>水龙</code> <code>404 Not Found</code> <code>某贼</code> <code>糸北</code> <code>Fleey多多</code> <code>月曜</code> <code>戴哥</code> <code>双霖</code> <code>lz差不多是条咸鱼了</code> <code>溴化锂</code> <code>Cicada000</code> <code>任永铨</code> <code>蓝点网</code> <code>SkyWT</code> <code>薇龙</code> <code>Kronight</code> <code>烟波</code> <code>Steven Lynn</code> <code>探姬</code> <code>Cikey</code> <code>Ryan.eth</code> </p>
</blockquote>
<p>BTW 马原补考又没过,<em>Fuck You</em>.</p>
]]></content>
      <categories>
        <category>吹水</category>
      </categories>
      <tags>
        <tag>回忆录</tag>
        <tag>杂谈</tag>
      </tags>
  </entry>
  <entry>
    <title>洛必达法则在高中数学中的简单应用</title>
    <url>/2023/07/04/%E6%B4%9B%E5%BF%85%E8%BE%BE%E6%B3%95%E5%88%99%E5%9C%A8%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>2024年8月4日更新：图床跑路，所有图片均丢失</p>
</blockquote>
<h2 id="0x0-洛必达是什么"><a href="#0x0-洛必达是什么" class="headerlink" title="0x0 洛必达是什么"></a>0x0 洛必达是什么</h2><p>对于<code>洛必达法则</code>，维基百科是这样介绍的:</p>
<blockquote>
<p>洛必达法则（法语：Règle de L’Hôpital，英语：L’Hôpital’s rule）是利用导数来计算具有不定型的极限的方法。该法则以法国数学家纪尧姆·德·洛必达的名字命名，但实际上是由瑞士数学家<a href="https://zh.wikipedia.org/zh-cn/%E7%B4%84%E7%BF%B0%C2%B7%E7%99%BD%E5%8A%AA%E5%88%A9" title="这是一个维基链接，在中国大陆可能无法正常访问">约翰·伯努利</a>所发现。</p>
</blockquote>
<p>  借助一个简单的例子，我们可以轻松了解什么是洛必达法则:</p>
<ul>
<li><p>例 0-1</p>
<p>对于函数 $f(x)&#x3D;\frac{ln(x)}{x-1}$ ，求$\lim_{x \to 1}f(x)$的极限。</p>
<p>通过简单的取特殊值描点连线，我们可以得到该函数的图像:</p>
<p><img src="https://s1.ax1x.com/2023/07/04/pCscOfg.png"><br>当我们试图将$x&#x3D;1$代入函数式时，我们会发现，分母$x-1$在此时等于$0$，明显地，这是有悖于我们的常识，分母是不能为$0$的</p>
<p>那么我们该如何解决这个问题呢？</p>
<p>现在我们将分子和分母拆分来看，分别得到函数式和图像:<br>$$<br>g(x)&#x3D;ln(x)<br>$$<br><img src="https://s1.ax1x.com/2023/07/04/pCsgs3Q.png"><br>$$<br>h(x)&#x3D;x-1<br>$$</p>
<p><img src="https://s1.ax1x.com/2023/07/04/pCsg2Bq.png"></p>
<p>不难发现，函数$g(x)$和$h(x)$均过点$(1,0)$，故我们将其无限放大，由于两者均为可微函数，且可微函数局部是线性的，因此二者的无限放大图像均为直线。</p>
<p>回想我们曾经学到的关于<code>斜率</code>的定义，可以意识到，在这种极限情况下，我们可以将极限处的斜率作为函数值使用，故可得:</p>
<p>$$<br>lim_{(x\to 1)}f(x)&#x3D;lim_{(x\to 1)}\frac{g(x)}{h(x)}&#x3D;lim_{(x\to 1)}\frac{g’(x)}{h’(x)}&#x3D;lim_{(x\to 1)}\frac{\frac{1}{x}}{1}&#x3D;1<br>$$</p>
</li>
</ul>
<h2 id="0x1-洛必达法则的局限性"><a href="#0x1-洛必达法则的局限性" class="headerlink" title="0x1 洛必达法则的局限性"></a>0x1 洛必达法则的局限性</h2><ol>
<li>分子分母同时趋向于$0$($\frac{0}{0}$)或同时趋向于$\infty$($\frac{\infty}{\infty}$)</li>
<li>分子分母在限定的区域内是否分别可导。</li>
<li>高考不可用(Doge)</li>
</ol>
<h2 id="0x2-洛必达法则在高中阶段的例题实战"><a href="#0x2-洛必达法则在高中阶段的例题实战" class="headerlink" title="0x2 洛必达法则在高中阶段的例题实战"></a>0x2 洛必达法则在高中阶段的例题实战</h2><ul>
<li><p>例2-1</p>
<p>  当$x&gt;0$时，不等式$e^x {\geq} ax+1$恒成立，求实数$a$的取值范围。</p>
<p>  解答：</p>
<p>  分离参数得$a{\leq}\frac{e^x-1}{x}$，其中$a&gt;0$</p>
<p>  令$f(x)&#x3D;\frac{e^x-1}{x}$，对其求导得</p>
<p>  $f’(x)&#x3D;\frac{(x-1)e^x+1}{x^2}$，令$g(x)&#x3D;(x-1)e^x+1&#x3D;0$</p>
<p>  得$x&#x3D;0$</p>
<p>  对$g(x)$求导，得$g’(x)&#x3D;xe^x$，当$x&gt;0$时，$g’(x)&gt;0$</p>
<p>  因此$g(x)$在$x&gt;0$时单调递增</p>
<p>  要求$a\le f(x)$恒成立，因此$a\le f(x)_{min}$，但当$x&#x3D;0$时，$e^x-1&#x3D;x&#x3D;0$，此即为$\frac{0}{0}$型不定式。根据洛必达法则，有：</p>
<p>  $\lim_{x \rightarrow 0}{\frac{e^x-1}{x}}&#x3D;\lim_{x \rightarrow 0}{\frac{e^x}{1}}&#x3D;1$，因此$a\le 1$，实数 a 的取值范围是$(-\infty ,1]$。</p>
</li>
</ul>
<h2 id="0x3-课后习题"><a href="#0x3-课后习题" class="headerlink" title="0x3 课后习题"></a>0x3 课后习题</h2><blockquote>
<p>若不等式$ax&gt;sin(x)$对于$x\in (0,\frac{\pi}{2})$恒成立，求$a$的取值范围。</p>
</blockquote>
<p>  <em>(答案将会于稍晚些时候发布在评论区)</em></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>高中数学</tag>
        <tag>洛必达</tag>
      </tags>
  </entry>
  <entry>
    <title>究极偏执的产物?小米13Ultra半月使用杂谈</title>
    <url>/2023/07/20/%E7%A9%B6%E6%9E%81%E5%81%8F%E6%89%A7%E7%9A%84%E4%BA%A7%E7%89%A9-%E5%B0%8F%E7%B1%B313Ultra%E5%8D%8A%E6%9C%88%E4%BD%BF%E7%94%A8%E6%9D%82%E8%B0%88/</url>
    <content><![CDATA[<blockquote>
<p>2024年8月4日更新：图床跑路，所有图片均丢失</p>
</blockquote>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrUyR.png" alt="img"></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今年4.18日小米发布了13系列的超大杯产品 –小米13Ultra。</p>
<p>那晚，我坐在教室，用了半个晚自习的时间看完了直播。骁龙8G2，IMX989，IMX858*3，多摄调色，可变光圈，UltraRaw，4K60&#x2F;8K24，miLog，杜比视界，IP68，开放的Bootloader解锁政策，USB3.0等等，这就是当今你所能够找到的安卓端的影像旗舰中最全能的之一，或许没有之一。直播结束后，我说：一定要买一台。</p>
<p>我没有说别家的989旗舰不好，它们都很优秀，哈苏的色彩我也很喜欢，但是不得不承认，对于一个离不开ROOT的用户来说，小米13Ultra是我唯一的选择。</p>
<p>于是7月3号那一天，刚刚结束高考不久的我，拿到了这台手机：小米13Ultra橄榄绿16+512。看到它的第一印象，那就是：厚重。作为一个从OnePlus8T换过来的用户，重量一下子从188g提升到227g，这感知，是真的明显，甚至再拿起我148g的备用机iPhone SE2，这真的很让人不禁怀疑，这真的是一台正常的手机吗？</p>
<h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><p>既然这台机器最重要的点就是它的相机，那么废话不多说，直接上样片：</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHr0w6.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrBTK.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrsYD.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHryfe.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrgld.png" alt="img"></p>
<p>这些是我用了这么多天后自认为拍得还可以的一些照片，当然好看的肯定不止这几张，但限于篇幅我不能再放更多了，如果你感兴趣，或许我可以把好看的照片单独发出来。</p>
<p>另外还需要提到的一点是得益于IMX858，这次终于可以实现多摄同步调色，也就是说三颗副摄像头也都全部支持莱卡影调的调色，并且素质都不差，在专业模式下还可以拍摄DNG格式的14bit UltraRaw照片，给后期留下更充足的空间，唯一一点就是专业模式下没有莱卡水印，当然这也可以理解，毕竟带着水印去PS里面调总归会有点怪怪的，水印也会变得不好看。</p>
<p>那么有没有需要吐槽的地方呢？那当然有，你像手机的长焦镜头，明明原生倍率是2.6x，到了2.6x手机也确实会自动切换，但小米不知道怎么想的，在相机里只给了0.5x，1x，2x，3.2x，5x，这几个快捷档位，所以如果我想要用到长焦镜头的全部画面，只能手动调节，快捷档位只是个裁切。我知道肯定会有人说：3.2x更利于构图所以才把它放在快捷档位，话是这么说没有错，可为什么不干脆直接做成原生3.2x或者直接在设置里面提供一个修改快捷档位的选项呢？是吧小米。</p>
<p>那么说完拍照就该讲讲录像了，简单概括就是：很强，但不是最强。虽然说参数最高给到了8K24fps，尽管你只能拍六分钟，但是如果你打开HDR或者万物追焦，那么你只能获得最高4K30fps的视频录制规格，并且这两项功能还不能同时打开，也就是说你要么HDR和万物追焦都不开，这样你可以最高开到8K24fps的视频，或者你可以开启二者之一，然后录制4K30fps的视频，另外在超级防抖和超级防抖Pro模式下你都只能拍摄1080p30fps的规格，你不能升档，也不能降档，杜比视界也只支持1080p和4K两种画质，这有点可惜。另外它也支持h.264和h.265的规格，你可以自由选择，当然也不要奢望它能给你上ProRes，这不现实。</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrh0P.png" alt="img"></p>
<p>在专业模式下，开启miLog，你可以拍摄4k24fps&#x2F;4k30fps 10bit Raw的规格，不过需要注意的是，只有主摄IMX989支持log录制，其他副摄均不支持。在录制的同时你可以同时套用LUT进行实时监看。当然，log模式下也不支持杜比视界。</p>
<h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>那么说完相机，我们再来这台手机另一个重点：性能。</p>
<p>小米13Ultra搭载了2023年统一分配的骁龙8Gen2处理器以及LPDDR5x内存，UFS4.0闪存，性能释放属于第一梯队。跑分什么的我觉得大家肯定都看腻了，我们不如直接整点花活：原神4x分辨率渲染</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrIk8.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrotS.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrTfg.png" alt="img"></p>
<p>在4x分辨率下，原神短时间内可以跑到平均12.5帧，已经是属于一个能玩的水平了(bushi)，平均能耗6.56w，调度还是比较保守。</p>
<p>另外，这次骁龙8Gen2还带来了一个特别的功能：光线追踪，至于效果如何，我只能说：支持了，但仅仅是支持了。</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrHpQ.png" alt="img"></p>
<p>GPU Score光追测试480p分辨率下平均帧率45.1，1080p分辨率下平均帧率14.0，属于看个乐子的水平。</p>
<p>散热方面，由于我没有用过888和8gen1,也不好评价跟这两款的区别，就说说我之前用的865吧，正常使用室内8gen2发热较865区别不是很大，但是到了室外没有wifi的地方，由于865是外挂5G，8gen2与其相比会好不少。</p>
<h2 id="外围"><a href="#外围" class="headerlink" title="外围"></a>外围</h2><p>外围方面首先这次小米13Ultra声称使用了90w有线充电，50w无线充电并且支持10w无线反冲。单从有线方面进行测试：息屏峰值可达70w，而后慢慢稳定在40w左右，实测从30%到100%充满约27分钟。</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrblj.png" alt="img"></p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrv7V.png" alt="img"></p>
<p>除了充电，这次小米终于弃用了USB2.0，采用了USB3.2Gen1，算是巨大进步。</p>
<p>马达方面，由于整机较为厚重，搭载的1010 X轴线性马达震感不算强烈，只能说够用，MIUI的振动调教也比较拉跨，不如之前一加8t的振动体验。</p>
<p>其他方面红外和NFC这些小米祖传的东西依旧没变，希望小米有机会能升级可学习或者可编程的红外发射器。需要说明的是，起初我用惯了一加的三段式开关忽然到了小米这边反而会有点不适应，问题不在于调整静音不方便了，而是少了一样可以拿来解压的东西。</p>
<h2 id="玩机"><a href="#玩机" class="headerlink" title="玩机"></a>玩机</h2><p>作为吸引为购买这台手机的最重要的原因，玩机当然是必不可少的。我认为模块不一定要多，自己够用就行了，也不一定非得追求最新技术，官方版Magisk也够我用了，平使用的也就只有中国银行比较敏感，不过root设备也能正常使用人脸之外的功能，真的要给中行一个好评！并且包里随时放着一台iPhone，出门在外也不怕突发情况无法人脸导致的尴尬局面。</p>
<p><img src="https://s1.ax1x.com/2023/07/20/pCHrzkT.png" alt="img"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>正如标题所说的，小米13Ultra是一款『究极偏执的产物』，是一款“不计后果”的影像旗舰。如果你对影像的需求不是这么高的话，小米13Pro或许可以是更好的选择，如果你真的需要这么顶的影像规格，那么你可以好好看看这台手机，不过最终的决定权在你手里，还是建议你到店里仔细把玩它和它的竞品们，毕竟它们都不便宜。</p>
<p>好了，以上就是本期图文的全部内容了，这里是Seimo，我们下次再会。</p>
]]></content>
      <categories>
        <category>评测</category>
      </categories>
      <tags>
        <tag>杂谈</tag>
        <tag>手机</tag>
        <tag>体验</tag>
      </tags>
  </entry>
  <entry>
    <title>(可能是)中文互联网最完备的PIFuHD本地部署指南</title>
    <url>/2023/09/19/%E5%8F%AF%E8%83%BD%E6%98%AF-%E4%B8%AD%E6%96%87%E4%BA%92%E8%81%94%E7%BD%91%E6%9C%80%E5%AE%8C%E5%A4%87%E7%9A%84PIFuHD%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<blockquote>
<p>2024年8月4日更新：图床跑路，所有图片均丢失</p>
</blockquote>
<h2 id="0x0-什么是PIFuHD"><a href="#0x0-什么是PIFuHD" class="headerlink" title="0x0 什么是PIFuHD ?"></a>0x0 什么是PIFuHD ?</h2><p><a href="https://shunsukesaito.github.io/PIFuHD/">PIFuHD</a>：用于高分辨率 3D 人体数字化的多级像素对齐隐式函数，基于Shunsuke Saito, Tomas, Simon, Jason Saragih, Hanbyul Joo, University of Southern California, Facebook Reality Labs, Facebook AI Research等研究人员及企业在2020年四月发表在<a href="https://arxiv.org/pdf/2004.00452.pdf">arxiv上的论文</a>，使用Python打造，可以通过深度学习计算的方式将平面2D人体照片转换为3D空间模型。</p>
<h2 id="0x1-环境准备"><a href="#0x1-环境准备" class="headerlink" title="0x1 环境准备"></a>0x1 环境准备</h2><h3 id="硬件配置："><a href="#硬件配置：" class="headerlink" title="硬件配置："></a>硬件配置：</h3><ul>
<li>显卡：RTX 4060 Laptop</li>
<li>CPU：Intel i9-13900HX</li>
<li>内存：32GB</li>
</ul>
<h3 id="软件配置："><a href="#软件配置：" class="headerlink" title="软件配置："></a>软件配置：</h3><ul>
<li>操作系统：Ubuntu 22.04.3 LTS</li>
<li>显卡驱动：NVIDIA-Linux-x86_64-525.125.06</li>
<li>CUDA版本：11.8</li>
<li>cudnn版本：8.9.5</li>
<li>python版本：3.10</li>
<li>pytorch版本：1.12.0</li>
<li>编译器版本：gcc 9.4.0</li>
</ul>
<h2 id="0x2-环境准备"><a href="#0x2-环境准备" class="headerlink" title="0x2 环境准备"></a>0x2 环境准备</h2><h3 id="安装Ubuntu22-04"><a href="#安装Ubuntu22-04" class="headerlink" title="安装Ubuntu22.04"></a>安装Ubuntu22.04</h3><p>在<a href="https://cn.ubuntu.com/download/desktop">Ubuntu官网</a>下载安装镜像，使用UltraISO等软件制作启动U盘，在BIOS中设置U盘启动，进入Ubuntu安装界面，选择安装Ubuntu，一路默认安装即可，注意勾选“安装专有的硬件驱动”。由于虚拟机无法使用CUDA，所以请<strong>不要</strong>使用虚拟机安装！！！</p>
<h3 id="安装显卡驱动"><a href="#安装显卡驱动" class="headerlink" title="安装显卡驱动"></a>安装显卡驱动</h3><p>安装完成Ubuntu后，打开终端，输入命令：</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">ubuntu-drivers list</span><br></pre></td></tr></table></figure>
<p>此时系统会列出适用于当前设备的显卡驱动，比如</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">nvidia-driver-535-server-open, (kernel modules provided by linux-modules-nvidia-535-server-open-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-525-server, (kernel modules provided by linux-modules-nvidia-525-server-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-535, (kernel modules provided by linux-modules-nvidia-535-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-535-server, (kernel modules provided by linux-modules-nvidia-535-server-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-525, (kernel modules provided by linux-modules-nvidia-525-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-525-open, (kernel modules provided by linux-modules-nvidia-525-open-generic-hwe-22.04)</span><br><span class="line">nvidia-driver-535-open, (kernel modules provided by linux-modules-nvidia-535-open-generic-hwe-22.04)</span><br><span class="line"></span><br><span class="line">//通常会列出多个版本的驱动，建议选择不带任何后缀的版本</span><br></pre></td></tr></table></figure>
<p>选择合适的版本运行，比如</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt install nvidia-driver-535</span><br><span class="line">//注意将驱动名称替换为上一条指令输出的结果</span><br></pre></td></tr></table></figure>
<p>进行安装</p>
<h3 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h3><p><strong>注意！注意！注意！</strong> ，由于需要用到 <code>openpose</code>，而<code>openpose</code>年久未修，建议最高cuda版本为<strong>11.8</strong>，高于此版本可能会出现bug。</p>
<p>首先，在终端中运行<code>nvidia-smi</code>，查看显卡支持的最高cuda版本</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0  On |                  N/A |</span><br><span class="line">| N/A   45C    P8     3W / 115W |    420MiB /  8188MiB |      1%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|    0   N/A  N/A      1848      G   /usr/lib/xorg/Xorg                187MiB |</span><br><span class="line">|    0   N/A  N/A      2010      G   /usr/bin/gnome-shell               93MiB |</span><br><span class="line">|    0   N/A  N/A     43583      G   ...RendererForSitePerProcess      136MiB |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以看到<code>CUDA Version: 12.0</code>，就是说当前显卡支持的最大cuda版本是12.0,考虑到前文提到的兼容性问题，我们选择安装<code>cuda11.8</code>。</p>
<p>进入<a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive</a>，选择合适的版本号，此处以<code>11.8.0</code>为例。</p>
<p>点击<code>CUDA Toolkit 11.8.0</code>，跳转安装页面，依次选择<code>Linux -&gt; x86_64 -&gt; Ubuntu-22.04 -&gt; runfile(local)</code>然后分别运行下方显示的两条指令。</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run</span><br><span class="line">sudo sh cuda_11.8.0_520.61.05_linux.run</span><br><span class="line"></span><br><span class="line">//不同版本安装指令可能不同，以页面具体显示为准</span><br></pre></td></tr></table></figure>
<p>在安装过程中，会询问你是否接受协议，输入accept，然后弹出安装选项，需要<strong>取消勾选</strong>显卡驱动。</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">[]Driver</span><br></pre></td></tr></table></figure>
<p>安装完成后，需要配置环境变量，打开~&#x2F;.bashrc文件，添加如下内容：</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/cuda-11.8/bin</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.8/lib64</span><br><span class="line"></span><br><span class="line">//其他版本CUDA请自行将11.8改成自己的版本</span><br></pre></td></tr></table></figure>
<p>最后重载:</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="安装cuDNN"><a href="#安装cuDNN" class="headerlink" title="安装cuDNN"></a>安装cuDNN</h3><p>在<a href="https://developer.nvidia.com/cuda-11-8-0-download-archive?target_os=Linux&target_arch=x86_64&Distribution=Ubuntu&target_version=22.04&target_type=runfile_local">官网</a>先登录NVIDIA，然后点击<code>Download cuDNN</code>并勾选<code>I Agree To the Terms of the cuDNN Software License Agreement</code>，这里只显示11.x和12.x，如果需要历史版本就在文末进入存档版本。这里下载11.x的 v8.9.5版本，下载<code>Local Installer for Ubuntu22.04 x86_64 (Deb)</code>安装包。</p>
<p>接着安装zliblg</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt-get install zlib1g</span><br></pre></td></tr></table></figure>
<p>安装cudnn包</p>
<figure class="highlight shell"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo dpkg -i cudnn-local-repo-ubuntu2204-8.9.5.29_1.0-1_amd64.deb</span><br><span class="line">//不同版本记得修改版本号</span><br></pre></td></tr></table></figure>
<p>安装结束后会提示安装key，直接复制运行弹出的命令即可，以下命令仅为示例，以自己终端输出的内容为准。</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo cp /var/cudnn-local-repo-ubuntu2204-8.9.5.29/cudnn-local-72322D7F-keyring.gpg /usr/share/keyrings/</span><br></pre></td></tr></table></figure>
<p>更新库</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>查看libcudnn8版本，下列命令均需要根据这个版本号修改</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">apt-cache policy libcudnn8</span><br></pre></td></tr></table></figure>
<p>得到输出结果，包含以下内容</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">候选： 8.9.5.29-1+cuda11.8</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>记下版本号并在下面命令中替换。</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt-get install libcudnn8=8.9.5.29-1+cuda11.8</span><br><span class="line">sudo apt-get install libcudnn8-dev=8.9.5.29-1+cuda11.8</span><br><span class="line">sudo apt-get install libcudnn8-samples=8.9.5.29-1+cuda11.8</span><br></pre></td></tr></table></figure>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>运行：</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt-get install libfreeimage3 libfreeimage-dev</span><br><span class="line">cp -r /usr/src/cudnn_samples_v8/ $HOME</span><br><span class="line">cd $HOME/cudnn_samples_v8/mnistCUDNN</span><br><span class="line">make clean &amp;&amp; make</span><br><span class="line">./mnistCUDNN</span><br></pre></td></tr></table></figure>

<p>得到输出结果</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">Test passed!</span><br></pre></td></tr></table></figure>
<p>即为安装成功。</p>
<h2 id="0x2-部署PIFuHD代码"><a href="#0x2-部署PIFuHD代码" class="headerlink" title="0x2 部署PIFuHD代码"></a>0x2 部署PIFuHD代码</h2><h3 id="拉取源码"><a href="#拉取源码" class="headerlink" title="拉取源码"></a>拉取源码</h3><p>方法一：使用官方源码</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">git clone https://github.com/facebookresearch/pifuhd.git</span><br></pre></td></tr></table></figure>
<p>然后将所有文件中的<code>np.int</code>替换为<code>int</code>,所有<code>np.bool</code>替换为<code>bool</code>。</p>
<p>方法二：使用我修改好的的源码</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">git clone https://github.com/SeimoDev/pifuhd.git</span><br></pre></td></tr></table></figure>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip python-is-python3</span><br><span class="line">pip install -r requirements.txt </span><br><span class="line">sudo apt-get install freeglut3-dev</span><br></pre></td></tr></table></figure>
<h3 id="下载预训练模型"><a href="#下载预训练模型" class="headerlink" title="下载预训练模型"></a>下载预训练模型</h3><figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sh ./scripts/download_trained_model.sh</span><br></pre></td></tr></table></figure>
<h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sh ./scripts/demo.sh</span><br></pre></td></tr></table></figure>
<p>得到输出结果,如果没有报错且正常输出模型展示页面，即为安装成功。</p>
<h2 id="配置openpose"><a href="#配置openpose" class="headerlink" title="配置openpose"></a>配置openpose</h2><h3 id="获取源代码"><a href="#获取源代码" class="headerlink" title="获取源代码"></a>获取源代码</h3><figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git</span><br><span class="line">cd openpose/</span><br><span class="line">git submodule update --init --recursive --remote</span><br></pre></td></tr></table></figure>
<h3 id="编译源代码"><a href="#编译源代码" class="headerlink" title="编译源代码"></a>编译源代码</h3><figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">sudo apt-get install cmake-qt-gui</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br><span class="line">cmake-gui ..</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgs.ovh/2023/09/19/IniT.png" alt="IniT.png"></p>
<p>将<code>Where is the source code</code>设置为Openpose源码目录<br>将<code>Where to build binaries</code>设置为build目录<br>点击<code>Configure</code><br><img src="https://i.imgs.ovh/2023/09/19/Ilxp.png" alt="Ilxp.png"></p>
<p>选择<code>Unix Makefiles</code><br>然后点击<code>Finish</code>，关闭后勾选<code>BUILD_PYTHON</code>，取消勾选<code>USE_CUDNN</code>然后点击<code>Generate</code>。<br>待下方输出</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">Configuring done</span><br><span class="line">Generating done</span><br></pre></td></tr></table></figure>
<p>关闭cmake-gui窗口，执行</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">make -j`nproc`</span><br></pre></td></tr></table></figure>
<p>如果不出意外，这样会自动完成openpose的编译。</p>
<h3 id="下载预训练模型-1"><a href="#下载预训练模型-1" class="headerlink" title="下载预训练模型"></a>下载预训练模型</h3><p>由于官方模型下载服务器Shutdown了，这里提供一个存档，可以自行下载放到models文件夹下</p>
<p><a href="https://zmqpk-my.sharepoint.com/:u:/g/personal/seimo_seimo_cn/EZlfdWAmNBRPniMFG0tbsEcB_RzqcP0ldRsJq0hTNHqfdQ?e=gHzf5J">下载Models.zip</a></p>
<h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>运行以下命令</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">./build/examples/openpose/openpose.bin --video examples/media/video.avi</span><br></pre></td></tr></table></figure>
<p>如果成功输出食品并且带有人体骨架即为成功</p>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><p>恭喜你，截至这里，前期工作已经完成，下面开始正式使用</p>
<p>切换到PIFuHD项目目录，将需要渲染的图片放到<code>sample_images</code>文件夹，然后运行如下命令：</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">python apps/batch_openpose.py -d openpose/ -i sample_images -o sample_images</span><br><span class="line">//如果你的openpose项目目录不在pifuhd/openpose下，请自行修改</span><br><span class="line">python -m apps.simple_test</span><br><span class="line">python apps/clean_mesh.py -f results/pifuhd_final/recon</span><br></pre></td></tr></table></figure>

<p>到此，如果你没有遇到报错，那么恭喜你，你已经成功运行了PIFuHD，并将人体图片转换为了三维模型。</p>
<p>你可以在<code>results/pifuhd_final/recon</code>下找到生成的obj文件，拖入需要的建模程序即可使用。</p>
<p>也可以运行下面这个命令将其渲染为视频展示</p>
<figure class="highlight plaintext"><input class="btn-copy" type="image" src="/img/icon/copy.svg" alt="复制" /><table><tr><td class="code"><pre><span class="line">python -m apps.render_turntable -f results/pifuhd_final/recon -ww 512 -hh 512</span><br></pre></td></tr></table></figure>

<h2 id="关于部分报错的处理："><a href="#关于部分报错的处理：" class="headerlink" title="关于部分报错的处理："></a>关于部分报错的处理：</h2><ul>
<li>在进行cmake编译时如遇到报错缺少库文件，请自行搜索相关库安装补全，一般报错时会有提示。</li>
<li>如果在最后生成模型时报错<code>CUDA out of Memory</code>,请降低图片分辨率后在次尝试。实测8GB显存可以渲染96*108分辨率的图片。</li>
</ul>
]]></content>
      <categories>
        <category>项目复现</category>
      </categories>
      <tags>
        <tag>PIFuHD</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
</search>
